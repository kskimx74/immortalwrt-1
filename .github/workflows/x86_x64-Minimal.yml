name:  x86_x64-Minimal

on:
  repository_dispatch:
  workflow_dispatch:
#   schedule:
#     - cron: 0 10 * * *

env:
  TZ: Asia/Shanghai    
jobs:
  x86_x64-18_06:
    runs-on: ubuntu-18.04
    steps:
    
    - name: Checkout Repository
      uses: actions/checkout@v2
      
    - name: Init Building Dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo timedatectl set-timezone "$TZ"
        echo "now":$(date +%F_%H%M%S)
        docker rmi $(docker images -q)
        sudo -E apt-get remove -y --purge azure-cli ghc zulu* hhvm llvm* firefox google* dotnet* powershell mysql* php* mssql-tools msodbcsql17 android*
        sudo -E apt-get update -y
        sudo -E apt-get full-upgrade -y
        sudo -E apt-get install -y build-essential asciidoc binutils bzip2 coreutils gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-8 gcc++-8 gcc-8-multilib g++-8-multilib p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python python3 python-pip python3-pip python3-setuptools python-ply python3-ply haveged lrzsz device-tree-compiler scons antlr3 gperf ecj fastjar re2c xz-utils tar zip
        sudo -EH pip3 install -U pyrogram tgCrypto
        for i in $(ls /usr/bin/*-8); do sudo -E ln -sf $i ${i%%-8*}; done
        sudo -E ln -sf /usr/include/asm-generic /usr/include/asm
        sudo -E apt-get autoremove -y --purge
        sudo -E apt-get clean -y
        sudo -E swapoff -a
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /usr/local/lib/android /opt/ghc /swapfile
        
    - name: Clone Source
      run: |
        echo "now":$(date +%F_%H%M%S)
        df -hP
        sudo mkdir -p /home/runner/hwl
        cd "/home/runner"
        mkdir -pv  artifact/{firmware,package,buildinfo}
        sudo chown -R runner:runner  artifact/
        sudo chown -R runner:runner hwl/ 
        ls -lh ./
        ls -lhR artifact/
        git clone --branch "openwrt-18.06-k5.4" --single-branch "https://github.com/immortalwrt/immortalwrt" "immortalwrt"
        cp -f "${GITHUB_WORKSPACE}/configs/egrep_x86_x64.config" "/home/runner/immortalwrt/.config"
        sudo chown -R runner:runner "immortalwrt"
        cd "/home/runner/immortalwrt"
        sudo sed -i 's/192.168.1.1/192.168.6.254/g' package/base-files/files/bin/config_generate
        cat -n package/base-files/files/bin/config_generate
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        make defconfig
        
#     - name: Start SSH via tmate
#       uses: P3TERX/ssh2actions@main
#       # Send connection info to Telegram (optional)
#       # You can find related documents here: https://core.telegram.org/bo ts
#       env:
#         TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
#         TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

    - name: Build ImmortalWrt-18.06
      id: build
      run: |
        cd "/home/runner/immortalwrt"
        sudo egrep -v '^$|#' .config
        md5sum .config
        ls -lah ./
        sudo cp .config /home/runner/hwl/x86_x64_build.config-bak-$(date +%F_%H%M%S)
        ls -lah /home/runner/hwl/
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        make -j$[$(nproc)+1]
        df -hP
        tree bin/targets/*
        ls -lha bin/targets/x86/64  
        cd "/home/runner/immortalwrt"
        sudo zip -r  /home/runner/hwl/packages_$(date +%F_%H%M%S).zip  bin/
        sudo cp bin/targets/x86/64/immortalwrt-x86-64-* /home/runner/hwl/
        sudo cp bin/targets/x86/64/*.buildinfo /home/runner/hwl/
        sudo cp bin/targets/x86/64/*sha256sums* /home/runner/hwl/
        ls -lha  /home/runner/hwl/   
        md5sum /home/runner/hwl/*
        
#     - name: Check Build
#       uses: P3TERX/ssh2actions@main
#       # Send connection info to Telegram (optional)
#       # You can find related documents here: https://core.telegram.org/bo ts
#       env:
#         TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
#         TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

    - name: Rebuild ImmortalWrt-18.06 to Collect Error Log
      if: failure()
      run: |
        cd /home/runner/hwl/
        sudo rm -rf ./*
        cd "/home/runner/immortalwrt"
        sudo rm -f .config
        cp -f "${GITHUB_WORKSPACE}/configs/egrep_x86_x64.config" "/home/runner/immortalwrt/.config"
        make -j1 V=s
        tree bin/*
        ls -lha bin/targets/x86/64  
        cat bin/targets/x86/64/config.buildinfo
        cd "/home/runner/immortalwrt"
        sudo zip -r /home/runner/hwl/packages_$(date +%F_%H%M%S).zip  bin/
        sudo cp bin/targets/x86/64/immortalwrt-x86-64-* /home/runner/hwl/
        sudo cp bin/targets/x86/64/*.buildinfo /home/runner/hwl/
        sudo cp bin/targets/x86/64/*sha256sums* /home/runner/hwl/
        ls -lha /home/runner/hwl/
        md5sum /home/runner/hwl/*
        
    - name: Prepare artifact
      run: |
        cd /home/runner/
        rm -rf $(find /home/runner/immortalwrt/bin/targets/ -type d -name "packages")
        cp -rf $(find /home/runner/immortalwrt/bin/targets/ -type f) ./artifact/firmware/
        cp -rf $(find /home/runner/immortalwrt/bin/packages/ -type f -name "*.ipk") ./artifact/package/
        cp -rf $(find /home/runner/immortalwrt/bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
        tree ./artifact/
        
    - name: Deliver buildinfo
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt_buildinfo
        path: /home/runner/artifact/buildinfo/

    - name: Deliver package
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt_package
        path: /home/runner/artifact/package/

    - name: Deliver firmware
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt_firmware
        path:  /home/runner/immortalwrt/bin/targets/

    - name: Generate release tag
      id: tag
      run: |
        echo "::set-output name=release_tag::$(date +"%F_%H%M%S")-x86_x64-Minimal_1806"
        echo "::set-output name=release_date::$(date +"%F_%H%M%S")"
        touch release.txt
        echo "::set-output name=status::success"
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ steps.tag.outputs.release_date }} x86_x64-Minimal_1806
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: |
          /home/runner/immortalwrt/.config
          /home/runner/hwl/*
          /home/runner/hwl/.*
