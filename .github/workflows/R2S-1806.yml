name: R2S-1806

on:
  repository_dispatch:
  workflow_dispatch:

jobs:
  ImmortalWrt-18_06:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Init Building Dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q)
        sudo -E apt-get remove -y --purge azure-cli ghc zulu* hhvm llvm* firefox google* dotnet* powershell mysql* php* mssql-tools msodbcsql17 android*
        sudo -E apt-get update -y
        sudo -E apt-get full-upgrade -y
        sudo -E apt-get install -y build-essential asciidoc binutils bzip2 coreutils gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-8 gcc++-8 gcc-8-multilib g++-8-multilib p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python python3 python-pip python3-pip python3-setuptools python-ply python3-ply haveged lrzsz device-tree-compiler scons antlr3 gperf ecj fastjar re2c xz-utils tar zip
        sudo -EH pip3 install -U pyrogram tgCrypto
        for i in $(ls /usr/bin/*-8); do sudo -E ln -sf $i ${i%%-8*}; done
        sudo -E ln -sf /usr/include/asm-generic /usr/include/asm
        sudo -E apt-get autoremove -y --purge
        sudo -E apt-get clean -y
        sudo -E swapoff -a
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /usr/local/lib/android /opt/ghc /swapfile
        df -hP
    - name: Clone Source
      run: |
        cd "/home/runner"
        git clone --branch "openwrt-18.06-k5.4" --single-branch "https://github.com/immortalwrt/immortalwrt" "immortalwrt"
        sudo chown -R runner:runner "immortalwrt"
        cd "/home/runner/immortalwrt"
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        patch -p1 < "${GITHUB_WORKSPACE}/patches/1806-modify_for_r2s.patch"
    - name: Build ImmortalWrt-18.06
      id: build
      run: |
        cd "/home/runner/immortalwrt"
        cp -f "${GITHUB_WORKSPACE}/configs/1806-config.seed" ".config"
        make defconfig
        make -j$[$(nproc)+1]
        df -hP
        mv -f "bin/targets/rockchip/armv8/immortalwrt-rockchip-armv8-friendlyarm_nanopi-r2s-ext4-sysupgrade.img.gz" "../R2S-1806-ext4-sysupgrade.img.gz"
        mv -f "bin/targets/rockchip/armv8/immortalwrt-rockchip-armv8-friendlyarm_nanopi-r2s-squashfs-sysupgrade.img.gz" "../R2S-1806-squashfs-sysupgrade.img.gz"
        mv -f "bin/targets/rockchip/armv8/sha256sums" "../R2S-1806-sha256sums"
        echo "::set-output name=status::success"
    - name: Rebuild ImmortalWrt-18.06 to Collect Error Log
      if: failure()
      run: |
        cd "/home/runner/immortalwrt"
        make -j1 V=s
        mv -f "bin/targets/rockchip/armv8/immortalwrt-rockchip-armv8-friendlyarm_nanopi-r2s-ext4-sysupgrade.img.gz" "../R2S-1806-ext4-sysupgrade.img.gz"
        mv -f "bin/targets/rockchip/armv8/immortalwrt-rockchip-armv8-friendlyarm_nanopi-r2s-squashfs-sysupgrade.img.gz" "../R2S-1806-squashfs-sysupgrade.img.gz"
        mv -f "bin/targets/rockchip/armv8/sha256sums" "../R2S-18.06-sha256sums"
    - name: Upload ImmortalWrt-18.06 SHA256SUM Hash
      uses: actions/upload-artifact@v2
      with:
        name: R2S-1806-sha256sums
        path: /home/runner/R2S-1806-sha256sums
    - name: Upload ImmortalWrt-18.06 EXT4 Firmware
      uses: actions/upload-artifact@v2
      with:
        name: R2S-1806-ext4-sysupgrade.img.gz
        path: /home/runner/R2S-1806-ext4-sysupgrade.img.gz
    - name: Upload ImmortalWrt-18.06 SquashFS Firmware
      uses: actions/upload-artifact@v2
      with:
        name: R2S-1806-squashfs-sysupgrade.img.gz
        path: /home/runner/R2S-1806-squashfs-sysupgrade.img.gz

    - name: Generate release tag
      id: create_tag
      if: steps.build.outputs.status == 'success' && !cancelled()
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d")-R2S-1806"
        echo "::set-output name=release_date::$(date +"%Y.%m.%d")"
        touch release.txt
        echo "::set-output name=status::success"
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.create_tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ steps.tag.outputs.release_date }} R2S-1806
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*
