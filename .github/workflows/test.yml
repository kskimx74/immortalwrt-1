name: test-Minimal

on:
  repository_dispatch:
  workflow_dispatch:
#   schedule:
#     - cron: 0 10 * * *

env:
  TZ: Asia/Shanghai    
jobs:
  test-18_06:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Init Building Dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo timedatectl set-timezone "$TZ"
        echo "now":$(date +%F_%H%M%S)
        docker rmi $(docker images -q)
        sudo -E apt-get remove -y --purge azure-cli ghc zulu* hhvm llvm* firefox google* dotnet* powershell mysql* php* mssql-tools msodbcsql17 android*
        sudo -E apt-get update -y
        sudo -E apt-get full-upgrade -y
        sudo -E apt-get install -y build-essential asciidoc binutils bzip2 coreutils gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-8 gcc++-8 gcc-8-multilib g++-8-multilib p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python python3 python-pip python3-pip python3-setuptools python-ply python3-ply haveged lrzsz device-tree-compiler scons antlr3 gperf ecj fastjar re2c xz-utils tar zip
        sudo -EH pip3 install -U pyrogram tgCrypto
        for i in $(ls /usr/bin/*-8); do sudo -E ln -sf $i ${i%%-8*}; done
        sudo -E ln -sf /usr/include/asm-generic /usr/include/asm
        sudo -E apt-get autoremove -y --purge
        sudo -E apt-get clean -y
        sudo -E swapoff -a
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /usr/local/lib/android /opt/ghc /swapfile
    - name: Clone Source
      run: |
        echo "now":$(date +%F_%H%M%S)
        df -hP
        sudo mkdir -p /home/runner/hwl
        tree /home/runner/hwl
        cd "/home/runner"
        git clone --branch "openwrt-18.06-k5.4" --single-branch "https://github.com/immortalwrt/immortalwrt" "immortalwrt"
        sudo chown -R runner:runner "immortalwrt"
        cd "/home/runner/immortalwrt"
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        #sudo rm -f .config
        sudo sed -i 's/192.168.1.1/192.168.2.1/g' package/base-files/files/bin/config_generate
        sudo cp -f "${GITHUB_WORKSPACE}/configs/conf_202104013.config" ".config"
        egrep -v "^$|#" .config | wc -l
        egrep -v "^$|#" .config
        echo "start make!"
        make defconfig
        echo "defconfig after"
#     - name: Start SSH via tmate
#       uses: P3TERX/ssh2actions@main
#       # Send connection info to Telegram (optional)
#       # You can find related documents here: https://core.telegram.org/bo ts
#       env:
#         TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
#         TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
    - name: Build ImmortalWrt-18.06
      id: build
      run: |
        cd "/home/runner/immortalwrt"
        #sudo egrep -v '^$|#' .config
        ls -lah ./
        #sudo egrep -v '^$|#' .config | wc -l
        sudo egrep -v '^$|#' .config >> R2S_build.config-bak-$(date +%F_%H%M%S)
        sudo wc -l R2S_build.config-bak-*
        sudo cp ./R2S_build.config-bak-* /home/runner/hwl/
        ls -lah /home/runner/hwl/
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        echo "build start!"
        make -j$[$(nproc)+1]
        echo "build end!"
        df -hP
        tree bin/*
        tree bin/targets/rockchip/armv8/*
        echo "start backup bin/targets/rockchip/armv8/config.buildinfo"
        sudo egrep -v '^$|#' bin/targets/rockchip/armv8/config.buildinfo
        echo "stop backup bin/targets/rockchip/armv8/config.buildinfo"
        sudo zip -r  /home/runner/hwl/packages_$(date +%F_%H%M%S).zip  /home/runner/immortalwrt/bin/*
        sudo cp bin/targets/rockchip/armv8/immortalwrt* /home/runner/hwl/
        sudo cp bin/targets/rockchip/armv8/*.buildinfo /home/runner/hwl/
        sudo cp bin/targets/rockchip/armv8/*sha256sums* /home/runner/hwl/
        ls -lh /home/runner/R2S* 
        ls -lh /home/runner/hwl/
        tree /home/runner/hwl/
        echo "::set-output name=status::success"
    - name: Rebuild ImmortalWrt-18.06 to Collect Error Log
      if: failure()
      run: |
        cd "/home/runner/immortalwrt"
        sudo echo "" >   /home/runner/R2S-Minimal_1806-sha256sums
        echo "Rebuild start!"
        make -j1 V=s
        echo "Rebuild end!"
        sudo egrep -v '^$|#' bin/targets/rockchip/armv8/config.buildinfo
        sudo zip -r  /home/runner/hwl/packages_$(date +%F_%H%M%S).zip  /home/runner/immortalwrt/bin/*
        sudo cp bin/targets/rockchip/armv8/immortalwrt* /home/runner/hwl/
        sudo cp bin/targets/rockchip/armv8/*.buildinfo /home/runner/hwl/
        sudo cp bin/targets/rockchip/armv8/*sha256sums* /home/runner/hwl/
        ls -lh /home/runner/R2S* 
        ls -lh /home/runner/hwl/
        tree /home/runner/hwl/
    - name: Upload ImmortalWrt-18.06 SHA256SUM Hash
      uses: actions/upload-artifact@v2
      with:
        name: R2S-1806-sha256sums
        path: /home/runner/*sha256sums*
    - name: Upload ImmortalWrt-18.06 EXT4 Firmware
      uses: actions/upload-artifact@v2
      with:
        name: R2S-1806-ext4-sysupgrade.img.gz
        path: /home/runner/R2S*.gz
    - name: Upload ImmortalWrt-18.06 SquashFS Firmware
      uses: actions/upload-artifact@v2
      with:
        name: R2S-1806-squashfs-sysupgrade.img.gz
        path: /home/runner/R2S*.gz

    - name: Generate release tag
      id: tag
      run: |
        echo "::set-output name=release_tag::$(date +"%F_%H%M%S")-R2S-Minimal_1806"
        echo "::set-output name=release_date::$(date +"%F_%H%M%S")"
        touch release.txt
        echo "::set-output name=status::success"
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ steps.tag.outputs.release_date }} R2S-Minimal_1806
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: |
          /home/runner/R2S*.gz
          /home/runner/R2S*sha256sums
          /home/runner/immortalwrt/.config
          /home/runner/hwl/*
